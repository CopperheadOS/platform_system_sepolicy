###
### A domain for further sandboxing privileged apps.
###

typeattribute updater coredomain;
app_domain(updater)

# Access the network.
net_domain(updater)
# Access bluetooth.
bluetooth_domain(updater)

# Allow the allocation and use of ptys
# Used by: https://play.privileged.com/store/apps/details?id=jackpal.androidterm
create_pty(updater)

# webview crash handling depends on self ptrace (b/27697529, b/20150694, b/19277529#comment7)
allow updater self:process ptrace;

allow updater audioserver_service:service_manager find;
allow updater cameraserver_service:service_manager find;
allow updater drmserver_service:service_manager find;
allow updater mediacodec_service:service_manager find;
allow updater mediametrics_service:service_manager find;
allow updater mediadrmserver_service:service_manager find;
allow updater mediaextractor_service:service_manager find;
allow updater mediaserver_service:service_manager find;
allow updater nfc_service:service_manager find;
allow updater oem_lock_service:service_manager find;
allow updater radio_service:service_manager find;
allow updater surfaceflinger_service:service_manager find;
allow updater app_api_service:service_manager find;
allow updater system_api_service:service_manager find;
allow updater persistent_data_block_service:service_manager find;
allow updater recovery_service:service_manager find;

# Write to /cache.
allow updater { cache_file cache_recovery_file }:dir create_dir_perms;
allow updater { cache_file cache_recovery_file }:file create_file_perms;
# /cache is a symlink to /data/cache on some devices. Allow reading the link.
allow updater cache_file:lnk_file r_file_perms;

# Write to /data/ota_package for OTA packages.
allow updater ota_package_file:dir rw_dir_perms;
allow updater ota_package_file:file create_file_perms;

# Access to /data/media.
allow updater media_rw_data_file:dir create_dir_perms;
allow updater media_rw_data_file:file create_file_perms;

# Used by Finsky / Android "Verify Apps" functionality when
# running "adb install foo.apk".
allow updater shell_data_file:file r_file_perms;
allow updater shell_data_file:dir r_dir_perms;

# Allow verifier to access staged apks.
allow updater { apk_tmp_file apk_private_tmp_file }:dir r_dir_perms;
allow updater { apk_tmp_file apk_private_tmp_file }:file r_file_perms;

# b/18504118: Allow reads from /data/anr/traces.txt
allow updater anr_data_file:file r_file_perms;

# Allow GMS core to access perfprofd output, which is stored
# in /data/misc/perfprofd/. GMS core will need to list all
# data stored in that directory to process them one by one.
userdebug_or_eng(`
  allow updater perfprofd_data_file:file r_file_perms;
  allow updater perfprofd_data_file:dir r_dir_perms;
')

# For AppFuse.
allow updater vold:fd use;
allow updater fuse_device:chr_file { read write };

# /sys and /proc access
r_dir_file(updater, sysfs_type)
r_dir_file(updater, proc)
r_dir_file(updater, rootfs)

# Allow GMS core to open kernel config for OTA matching through libvintf
allow updater config_gz:file { open read getattr };

# access the mac address
allowxperm updater self:udp_socket ioctl SIOCGIFHWADDR;

# Allow GMS core to communicate with update_engine for A/B update.
binder_call(updater, update_engine)
allow updater update_engine_service:service_manager find;

# Allow GMS core to communicate with dumpsys storaged.
binder_call(updater, storaged)
allow updater storaged_service:service_manager find;

# Allow Phone to read/write cached ringtones (opened by system).
allow updater ringtone_file:file { getattr read write };

# Access to /data/preloads
allow updater preloads_data_file:file r_file_perms;
allow updater preloads_data_file:dir r_dir_perms;
allow updater preloads_media_file:file r_file_perms;
allow updater preloads_media_file:dir r_dir_perms;

# Allow privileged apps (e.g. GMS core) to generate unique hardware IDs
allow updater keystore:keystore_key gen_unique_id;

# Allow GMS core to access /sys/fs/selinux/policyvers for compatibility check
allow updater selinuxfs:file r_file_perms;

read_runtime_log_tags(updater)

# suppress denials when safetynet scans /system
dontaudit updater exec_type:file getattr;


###
### neverallow rules
###

# Receive or send uevent messages.
neverallow updater domain:netlink_kobject_uevent_socket *;

# Receive or send generic netlink messages
neverallow updater domain:netlink_socket *;

# Too much leaky information in debugfs. It's a security
# best practice to ensure these files aren't readable.
neverallow updater debugfs:file read;

# Do not allow privileged apps to register services.
# Only trusted components of Android should be registering
# services.
neverallow updater service_manager_type:service_manager add;

# Do not allow privileged apps to connect to the property service
# or set properties. b/10243159
neverallow updater property_socket:sock_file write;
neverallow updater init:unix_stream_socket connectto;
neverallow updater property_type:property_service set;

# Do not allow updater to be assigned mlstrustedsubject.
# This would undermine the per-user isolation model being
# enforced via levelFrom=user in seapp_contexts and the mls
# constraints.  As there is no direct way to specify a neverallow
# on attribute assignment, this relies on the fact that fork
# permission only makes sense within a domain (hence should
# never be granted to any other domain within mlstrustedsubject)
# and updater is allowed fork permission to itself.
neverallow updater mlstrustedsubject:process fork;

# Do not allow updater to hard link to any files.
# In particular, if updater links to other app data
# files, installd will not be able to guarantee the deletion
# of the linked to file. Hard links also contribute to security
# bugs, so we want to ensure updater never has this
# capability.
neverallow updater file_type:file link;
